{"version":3,"file":"bundle.src_components_GameContainer_OthelloContainer_OthelloContainer_jsx.js","mappings":"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","sources":["webpack://games-ui/./src/components/GameContainer/OthelloContainer/OthelloContainer.jsx","webpack://games-ui/./src/components/Model/Othello.js","webpack://games-ui/./assets/styles/othello.scss","webpack://games-ui/./assets/styles/othello.scss?8d7a"],"sourcesContent":["import React, { Component } from \"react\";\nimport Player from '../PlayerContainer/Player.jsx';\nimport GameModel from 'Model/Game';\nimport Othello from 'Model/Othello';\nimport GameUtil from 'Utils/Game';\nimport 'styles/othello.scss';\n\nconst GAME_NAME = 'othello';\n\nclass OthelloContainer extends Component {\n    constructor() {\n        super();\n\n        this.state = _.assign({}, this.getInitialValues());\n\n        this.updateReceived = this.updateReceived.bind(this);\n        this.restartGame = this.restartGame.bind(this);\n        this.resetStateUpdateGameInfo = GameUtil.resetStateUpdateGameInfo.bind(this);\n        this.handleError = GameUtil.handleError.bind(this);\n        this.startAniAndUpdateGameInfo = this.startAniAndUpdateGameInfo.bind(this);\n    }\n\n    getInitialValues() {\n        return {\n            board: null,\n        }\n    }\n\n    getAdditionalInfo(player) {\n        return <div className=\"player-additonal-info\">\n            <div>[{this.props.game.playersDiskColor[player._id] == 'W' ? 'White' : 'Black'}]</div>\n            <div>[{this.props.game.playersDisksInBoardCount[player._id]}]</div>\n        </div>\n    }\n\n    listPlayers() {\n        const { players } = this.props.game;\n        return <div className=\"d-flex flex-wrap px-1 mt-2\">\n            {players.map((o, i) => <Player key={i}\n                gameId={this.props.game._id}\n                gameName={GAME_NAME}\n                player={o}\n                isMe={o._id == this.props.me._id}\n                currentPlayer={this.props.game.currentPlayer}\n                amIAdmin={this.props.state.amIAdmin}\n                additionalInfo={() => this.getAdditionalInfo(o)}\n                hideInfo={true} />)}\n        </div>;\n    }\n\n    getPlayerTurnAlert() {\n        return <div className=\"d-flex py-2\">\n            <span className={`m-auto sg-btn-${this.props.state.isMyMove ? 'danger' : 'trans'} `}>\n                <span><b>{this.props.game.currentPlayer.name}</b> turn</span>\n            </span>\n        </div>;\n    }\n\n    handlePlaceDisk = (x, y) => {\n        const data = {\n            position: { x, y }\n        };\n        Othello.placeDisk(this.props.game._id, data)\n            .then(this.startAniAndUpdateGameInfo)\n            .catch(this.handleError);\n    }\n\n    getDisk(cell, i, j) {\n        const className = `sg-cell ${cell == 'E' && 'sg-btn'}`;\n        return <button onClick={() => this.handlePlaceDisk(i, j)} key={j} className={className} disabled={!this.props.state.isMyMove}>\n            <div id={`disk-${i}-${j}`} className={`sg-disk sg-disk-${cell}`}></div>\n        </button>\n    }\n\n    showBoard() {\n        const { board } = this.props.game;\n        if (!board) return;\n\n        const rows = [];\n        for (let i = 0; i < board.length; i++) {\n            const cols = [];\n            for (let j = 0; j < board[i].length; j++) {\n                const cell = board[i][j];\n                cols.push(this.getDisk(cell, i, j));\n            }\n            rows.push(<div key={i} className=\"sg-row\">{cols}</div>);\n        }\n\n        return <div className=\"board-container\">\n            <div className=\"board-container-inner\">\n                {rows}\n            </div>\n        </div>;\n    }\n\n    showDisksLeft() {\n        if(!this.props.amIPresentInPlayers) return;\n        return <div className=\"d-flex py-2\">\n            <span className=\"m-auto sg-btn-primary\">\n                <b>Your {this.props.game.playersDiskColor[this.props.me._id] == 'W' ? 'white' : 'black'} disk(s) left: {this.props.game.playersDisksLeftCount[this.props.me._id]}</b>\n            </span>\n        </div>;\n    }\n\n    renderGame() {\n        return <div className=\"d-flex flex-column\">\n            {this.getPlayerTurnAlert()}\n            {this.listPlayers(true)}\n            {this.showBoard()}\n            {this.showDisksLeft()}\n        </div>\n    }\n\n    renderGameResults() {\n        return <div className=\"game-result text-center\">\n            <div className=\"alert alert-success text-center m-0 rounded-top rounded-bottom-0\"\n                style={{ boxShadow: '0 0 5px white' }}><b>Game Results</b></div>\n            <div className=\"game-result-table\">\n                <table className=\"table table-hover table-light table-striped rounded-bottom\" style={{ boxShadow: '0 0 5px white' }}>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Disk Color</th>\n                            <th scope=\"col\">Total Disk</th>\n                            <th scope=\"col\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.game.playersInGame.map((o, i) => {\n                            return <tr key={i}>\n                                <td>{o.name}{o._id == this.props.me._id ? \" (You)\" : \"\"}</td>\n                                <td>{this.props.game.playersDiskColor[o._id] == 'W' ? 'White' : 'Black'}</td>\n                                <td>{this.props.game.playersDisksInBoardCount[o._id]}</td>\n                                <td>{o._id == this.props.game.winner._id ? 'Won' : 'Lost'}</td>\n                            </tr>;\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {this.props.state.amIAdmin && <div className=\"d-flex\">\n                <button className=\"btn btn-primary m-auto btn-shadow\" onClick={this.restartGame}>Restart</button>\n            </div>}\n        </div>;\n    }\n\n    restartGame() {\n        GameModel.restartGame(GAME_NAME, this.props.game._id)\n            .then(this.props.updateGameInfo)\n            .catch(this.handleError);\n    }\n\n    render() {\n        switch (this.props.game.status) {\n            case 'STARTED': return this.renderGame();\n            case 'ENDED': return this.renderGameResults();\n        }\n    }\n\n    placeDisk(position, timeout) {\n        return new Promise((resolve) => {\n            $(`#disk-${position.x}-${position.y}`).css({\n                backgroundColor: this.props.game.playersDiskColor[this.props.game.currentPlayer._id] == 'W' ? 'white' : 'black',\n            });\n            setTimeout(() => resolve(), timeout);\n        });\n    }\n\n    async placeDisks(positionsToPlaceDisks) {\n        for (let i = 0; i < positionsToPlaceDisks.length; i++) {\n            await this.placeDisk(positionsToPlaceDisks[i], i==0 ? 300 : 100);\n        }\n    }\n\n    async startAniAndUpdateGameInfo(gameData) {\n        await this.placeDisks(gameData.positionsToPlaceDisks);\n        await this.props.updateGameInfo(gameData)\n        await this.props.state.isMyMove ? GameUtil.playNewNotify() : GameUtil.playLightNotify();\n    }\n\n    updateReceived(data) {\n        switch (data.event) {\n            case 'PLAYER_PLACED':\n                this.startAniAndUpdateGameInfo(data.gameData);\n                break;\n        }\n    }\n}\n\nexport default OthelloContainer;","import Request from './Request';\n\nexport default class {\n    static placeDisk(roomID, data) {\n        return new Promise((resolve, reject) => {\n            Request.post(`othello/${roomID}/place`, data).then(resp => resolve(resp)).catch(err => reject(err));\n        });\n    }\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".board-container {\\n  display: flex;\\n  margin: 10px auto;\\n  border: 40px black solid;\\n  border-radius: 10px;\\n  padding: 3px;\\n  background: #607d8b;\\n}\\n.board-container .board-container-inner {\\n  background: #373737;\\n  padding: 5px;\\n  border-radius: 10px;\\n}\\n.board-container .board-container-inner .sg-row {\\n  display: flex;\\n}\\n.board-container .board-container-inner .sg-cell {\\n  background: #27b08e;\\n  display: flex;\\n  flex-direction: column;\\n  box-shadow: 0px 0px 10px black;\\n  padding: 10px;\\n  border-radius: 5px;\\n}\\n.board-container .board-container-inner .sg-cell:not(:disabled):hover {\\n  transform: scale(1.1);\\n  transition: transform 0.5s;\\n}\\n.board-container .board-container-inner .sg-disk {\\n  padding: 30px;\\n  border-radius: 50px;\\n  transition: background-color 0.5s ease;\\n}\\n.board-container .board-container-inner .sg-disk-B {\\n  background: black;\\n  box-shadow: 5px 5px 10px black;\\n}\\n.board-container .board-container-inner .sg-disk-W {\\n  background: white;\\n  box-shadow: 5px 5px 10px black;\\n}\\n\\n@media only screen and (max-width: 750px) {\\n  .board-container {\\n    border: 30px black solid !important;\\n  }\\n\\n  .sg-cell {\\n    padding: 7.5px !important;\\n  }\\n\\n  .sg-disk {\\n    padding: 20px !important;\\n  }\\n}\\n@media only screen and (max-width: 550px) {\\n  .board-container {\\n    border: 20px black solid !important;\\n  }\\n\\n  .sg-cell {\\n    padding: 5px !important;\\n  }\\n\\n  .sg-disk {\\n    padding: 15px !important;\\n  }\\n}\\n@media only screen and (max-width: 400px) {\\n  .board-container {\\n    border: 15px black solid !important;\\n  }\\n}\\n@media only screen and (max-width: 370px) {\\n  .sg-cell {\\n    padding: 3px !important;\\n  }\\n}\\n@media only screen and (max-width: 340px) {\\n  .sg-disk {\\n    padding: 12px !important;\\n  }\\n}\\n@media only screen and (max-width: 300px) {\\n  .board-container {\\n    border: 10px black solid !important;\\n  }\\n\\n  .sg-disk {\\n    padding: 10px !important;\\n  }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./othello.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["React","Component","Player","GameModel","Othello","GameUtil","GAME_NAME","OthelloContainer","x","y","data","position","placeDisk","props","game","_id","then","startAniAndUpdateGameInfo","handleError","state","_","assign","getInitialValues","updateReceived","bind","restartGame","resetStateUpdateGameInfo","board","player","playersDiskColor","playersDisksInBoardCount","players","map","o","i","me","currentPlayer","amIAdmin","getAdditionalInfo","isMyMove","name","cell","j","className","handlePlaceDisk","rows","length","cols","push","getDisk","amIPresentInPlayers","playersDisksLeftCount","getPlayerTurnAlert","listPlayers","showBoard","showDisksLeft","boxShadow","playersInGame","winner","updateGameInfo","status","renderGame","renderGameResults","timeout","Promise","resolve","$","css","backgroundColor","setTimeout","positionsToPlaceDisks","gameData","placeDisks","playNewNotify","playLightNotify","event","Request","roomID","reject","post","resp","err"],"sourceRoot":""}